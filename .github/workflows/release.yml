name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_id: ${{ steps.draft_release.outputs.id }}
      upload_url: ${{ steps.draft_release.outputs.upload_url }}
    steps:
      - name: Draft release
        id: draft_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true

  build_release:
    name: Build Release
    needs: [create_release]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Release]
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            filename: cStop-linux-x86.zip
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
            filename: cStop-mac-x86.zip
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            filename: cStop-win-x86.zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libasound2-dev libfreetype6-dev libfontconfig1-dev libgl1-mesa-dev libcurl4-openssl-dev libwebkit2gtk-4.1-dev libgtk-3-dev

      - name: Configure
        run: >
          cmake -B ${{ github.workspace }}/build
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}

      - name: Zip artifacts
        run: |
          cd ${{ github.workspace }}/build/cStop_artefacts/Release
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            zip -r ${{ matrix.filename }} .
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            zip -r ${{ matrix.filename }} .
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a ${{ matrix.filename }} .
          fi

      - name: Upload artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/build/cStop_artefacts/Release/${{ matrix.filename }}
          asset_name: ${{ matrix.filename }}
          asset_content_type: application/zip

  publish_release:
    name: Publish release
    needs: [create_release, build_release]
    runs-on: ubuntu-latest
    steps:
      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.create_release.outputs.upload_id }}

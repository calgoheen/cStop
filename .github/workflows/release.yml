name: Release

on:
  push:
  pull_request:

jobs:
  release_code:
    name: Release code
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc
          - os: macos-latest
            c_compiler: cl
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libasound2-dev libfreetype6-dev libfontconfig1-dev libgl1-mesa-dev libcurl4-openssl-dev libwebkit2gtk-4.1-dev libgtk-3-dev

      - name: Configure
        run: >
          cmake -B ${{ github.workspace }}/build
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ github.workspace }}

      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ matrix.build_type }}

      - name: Zip artifacts
        run: |
          cd ${{ github.workspace }}/build/cStop_artefacts/Release
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            zip -r cStop-linux-x86.zip .
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            zip -r cStop-mac-x86.zip .
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a cStop-win-x86.zip .
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cStop-${{ matrix.os == 'ubuntu-latest' && 'linux' || matrix.os == 'macos-latest' && 'mac' || 'win' }}-x86
          path: ${{ github.workspace }}/build/cStop_artefacts/Release/cStop-*.zip
